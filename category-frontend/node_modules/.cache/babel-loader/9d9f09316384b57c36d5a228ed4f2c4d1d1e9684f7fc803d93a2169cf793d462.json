{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      id: null,\n      // Campo obligatorio\n      name: '',\n      description: '',\n      message: '',\n      success: false\n    };\n  },\n  methods: {\n    async createCategory() {\n      try {\n        // Enviar el objeto Category al backend\n        const response = await axios.post('http://localhost:18081/categories', {\n          id: this.id,\n          name: this.name,\n          description: this.description,\n          parentId: null // Este campo no es necesario, pero lo dejamos explícito como null\n        });\n        this.message = `Category created successfully with ID: ${response.data}`;\n        this.success = true;\n\n        // Reiniciar el formulario después de crear la categoría\n        this.id = null;\n        this.name = '';\n        this.description = '';\n      } catch (error) {\n        console.error(error);\n        this.message = 'Failed to create category. Please try again.';\n        this.success = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","id","name","description","message","success","methods","createCategory","response","post","parentId","error","console"],"sources":["C:\\Users\\yera2\\category-frontend\\src\\views\\CreateCategory.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Create a New Category</h1>\r\n    <form @submit.prevent=\"createCategory\">\r\n      <div>\r\n        <label for=\"id\">ID:</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"id\"\r\n          v-model=\"id\"\r\n          placeholder=\"Enter category ID\"\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <label for=\"name\">Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          v-model=\"name\"\r\n          placeholder=\"Enter category name\"\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <label for=\"description\">Description:</label>\r\n        <textarea\r\n          id=\"description\"\r\n          v-model=\"description\"\r\n          placeholder=\"Enter category description\"\r\n          required\r\n        ></textarea>\r\n      </div>\r\n      <button type=\"submit\">Create</button>\r\n    </form>\r\n    <p v-if=\"message\" :class=\"{ success: success, error: !success }\">{{ message }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      id: null, // Campo obligatorio\r\n      name: '',\r\n      description: '',\r\n      message: '',\r\n      success: false,\r\n    };\r\n  },\r\n  methods: {\r\n    async createCategory() {\r\n      try {\r\n        // Enviar el objeto Category al backend\r\n        const response = await axios.post('http://localhost:18081/categories', {\r\n          id: this.id,\r\n          name: this.name,\r\n          description: this.description,\r\n          parentId: null, // Este campo no es necesario, pero lo dejamos explícito como null\r\n        });\r\n        this.message = `Category created successfully with ID: ${response.data}`;\r\n        this.success = true;\r\n\r\n        // Reiniciar el formulario después de crear la categoría\r\n        this.id = null;\r\n        this.name = '';\r\n        this.description = '';\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.message = 'Failed to create category. Please try again.';\r\n        this.success = false;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nh1 {\r\n  color: #333;\r\n}\r\n\r\nform {\r\n  margin-top: 20px;\r\n}\r\n\r\nform div {\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  font-weight: bold;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\ninput,\r\ntextarea {\r\n  width: 100%;\r\n  padding: 0.5rem;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n}\r\n\r\ntextarea {\r\n  resize: vertical;\r\n  height: 100px;\r\n}\r\n\r\nbutton {\r\n  padding: 0.75rem 1.5rem;\r\n  font-size: 1rem;\r\n  background-color: #007BFF;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.message {\r\n  margin-top: 1rem;\r\n  font-size: 1.2rem;\r\n  color: green;\r\n}\r\n\r\n.message.error {\r\n  color: red;\r\n}\r\n</style>\r\n"],"mappings":"AAwCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,EAAE,EAAE,IAAI;MAAE;MACVC,IAAI,EAAE,EAAE;MACRC,WAAW,EAAE,EAAE;MACfC,OAAO,EAAE,EAAE;MACXC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF;QACA,MAAMC,QAAO,GAAI,MAAMT,KAAK,CAACU,IAAI,CAAC,mCAAmC,EAAE;UACrER,EAAE,EAAE,IAAI,CAACA,EAAE;UACXC,IAAI,EAAE,IAAI,CAACA,IAAI;UACfC,WAAW,EAAE,IAAI,CAACA,WAAW;UAC7BO,QAAQ,EAAE,IAAI,CAAE;QAClB,CAAC,CAAC;QACF,IAAI,CAACN,OAAM,GAAI,0CAA0CI,QAAQ,CAACR,IAAI,EAAE;QACxE,IAAI,CAACK,OAAM,GAAI,IAAI;;QAEnB;QACA,IAAI,CAACJ,EAAC,GAAI,IAAI;QACd,IAAI,CAACC,IAAG,GAAI,EAAE;QACd,IAAI,CAACC,WAAU,GAAI,EAAE;MACvB,EAAE,OAAOQ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACpB,IAAI,CAACP,OAAM,GAAI,8CAA8C;QAC7D,IAAI,CAACC,OAAM,GAAI,KAAK;MACtB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}